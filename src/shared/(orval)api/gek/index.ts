/**
 * Generated by orval v6.19.1 üç∫
 * Do not edit manually.
 * Gekcore broker API
 * Generic electronic key multi-cryptocurrency broker wallet platform with a built-in exchange.<br/>
                    Build version 2.0.3-20240214-0925.6204+eac2a76deff7246e80178738e522fdbc16824d4b<br/><br/>
                    –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–æ–≤ –≤—Å–µ—Ö API —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –≤ –ø–æ–ª–µ <b>result</b> JSON-RPC —Ñ–æ—Ä–º–∞—Ç–∞.<br/>
                    http –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç –∫–æ–¥ <b>200(OK)</b>, –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–ª–∞ –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.<br/>
                    –í —Å–ª—É—á–∞–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã—Ö/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫, –ø–æ–ª–µ <b>error</b> —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥(<b>code</b>) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ(<b>message</b>) –æ—à–∏–±–∫–∏.<br/>
                    –ü–æ–ª–µ <b>id</b> - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–±—Ä–æ—Å–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞(<b>nonce</b>) –∑–∞–ø—Ä–æ—Å–∞ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤.<br/><br/>
                    <b>–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ –æ—à–∏–±–æ–∫(–≤ —Å–∞–º–∏—Ö API –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω—ã):</b><br/><b>10001</b> - Wallet not found<br/><b>10002</b> - There is no client with that external_id in the system<br/><b>10003</b> - The wallet is blocked by the bank. Please, contact the bank's support<br/><b>10004</b> - Limiting the maximum number of wallet addresses per network type<br/><b>10005</b> - The account is not in the system<br/><b>10006</b> - Imposible to transfer to the same account<br/><b>10007</b> - Balance not enough<br/><b>10008</b> - Token network not found<br/><b>10009</b> - Room not found<br/><b>10010</b> - Order not found<br/><b>10011</b> - Error cancelling the order<br/><b>10012</b> - Error creating the order<br/><b>10013</b> - Amount must be more than zero<br/><b>10014</b> - The amount is invalid<br/><b>10015</b> - The rate is invalid<br/><b>10016</b> - Error performing transaction<br/><b>10017</b> - Error updating transaction<br/><b>10018</b> - Transaction not found<br/><b>10019</b> - Error cancelling transaction<br/><b>10020</b> - Error creating transaction<br/><b>10021</b> - Transaction for the wallet not found<br/><b>10022</b> - The code has expiredThe code not found<br/><b>10023</b> - Unknown problem<br/><b>10024</b> - The code has been already used<br/><b>10025</b> - Error updating room info<br/><b>10026</b> - Currency not found<br/><b>10027</b> - Code type not supported<br/><b>10028</b> - Invalid assets<br/><b>10029</b> - Key not found<br/><b>10030</b> - Request contains no content<br/><b>10031</b> - Couldn't add session data<br/><b>10032</b> - The address is wrong<br/><b>10033</b> - Couldn't sent transaction to self<br/><b>10034</b> - Internat transfer error<br/><b>10035</b> - The address is within the system but the option auto_inner_transfer is not enabled <br/><b>10036</b> - Bad address<br/><b>10037</b> - Unknown query result<br/><b>10038</b> - The amount is less than minimal allowed for the network<br/><b>10039</b> - The amount is more than maximal allowed for the network<br/><b>10040</b> - The fee is out of date, please try again<br/><b>10041</b> - Not found address transact<br/><b>10042</b> - Amount is more than allowed on this network<br/><b>10043</b> - Withdraw is not allowed on this network<br/><b>10044</b> - Can not withdraw on this network<br/><b>10045</b> - Wallet is deleted<br/><b>10046</b> - Wallet login denied<br/><b>10047</b> - Not found session data<br/><b>10048</b> - Not found template for deposit<br/><b>10049</b> - Can not be exchanged between same currencies<br/><b>10050</b> - empty type_network<br/><b>10051</b> - compeleted address_transact block_num > transact_list.CompliteBlock<br/><b>10052</b> - empty contract_id<br/><b>10053</b> - tx_id is empty<br/><b>10054</b> - The code is invalid<br/><b>10055</b> - Can't open investments linked to that currency<br/><b>10056</b> - Investment not found<br/><b>10057</b> - Investment term is less than the minimum<br/><b>10058</b> - Investment term is more than the maximum<br/><b>10059</b> - Error while creating wallet, try again or contact support<br/><b>10060</b> - Private room creation limit exceeded<br/><b>10061</b> - Room alredy exists<br/><b>10062</b> - Operation forbidden<br/><b>10063</b> - The referral must not be his own agent<br/><b>10064</b> - The code does not match the confirmation code<br/><b>10065</b> - Authentication token has expired<br/><b>10066</b> - Invalid auth token<br/><b>10067</b> - Invalid audience<br/><b>10068</b> - Auth tokent not provided<br/><b>10069</b> - Phone number not provided<br/><b>10070</b> - Invalid issuer<br/><b>10071</b> - income_push_block error<br/><b>10072</b> - Phone number is empty<br/><b>10073</b> - Error sending code<br/><b>10074</b> - Confirmation code is empty<br/><b>10075</b> - Timetick of confirmed transaction is incorrect<br/><b>10076</b> - Transaction has empty From or To<br/><b>10077</b> - Investment amount is less than minimal<br/><b>10078</b> - The reference number is incorrect<br/><b>10079</b> - Unknown problem<br/><b>10080</b> - The string contains unsupported characters<br/><b>10081</b> - Invalid UAS token<br/><b>10082</b> - Fiat tokens are prohibited for internal transfer
 * OpenAPI spec version: v1
 */
import type {
  AddressTxOutApiResponse,
  ApiResponse,
  AvailableDealArrayApiResponse,
  CardCreationResultApiResponse,
  CardIListApiResponse,
  CardLimits,
  CardRegistrationRequest,
  CardSecretDTOApiResponse,
  ChangePinModel,
  ClientDetailsApiResponse,
  ClientProgramIListApiResponse,
  CreateTransferIn,
  CreateTxCodeIn,
  CreateWithdrawIn,
  CreateWithdrawOutApiResponse,
  CurrencysOutListApiResponse,
  DealModel,
  FastCloseDepositOutApiResponse,
  GetBalanceOutListApiResponse,
  GetDepositOutApiResponse,
  GetDepositOutListApiResponse,
  GetGekV1AddressTxInfoParams,
  GetGekV1AssetsParams,
  GetGekV1BankGetCardsParams,
  GetGekV1CodeTxInfoParams,
  GetGekV1InvestGetInvestmentsParams,
  GetGekV1ListTxCodesParams,
  GetGekV1MarketGetOrdersParams,
  GetGekV1MarketGetRatesParams,
  GetGekV1MarketGetTradeInfoParams,
  GetGekV1TokensNetworksParams,
  GetGekV1WalletCreateAddressParams,
  GetGekV1WalletGetBalanceParams,
  GetGekV1WalletGetHistoryTransactionsParams,
  GetGekV1WalletGetInfoParams,
  GetGekV1WalletListAddressesParams,
  GetHistoryTrasactionOutListApiResponse,
  GetOrderListOutApiResponse,
  GetOrderListOutListApiResponse,
  GetTradeInfoOutApiResponse,
  NewOrderInfo,
  NewRoomInfo,
  ObjectApiResponse,
  PaymentDetails,
  PaymentFeeApiResponse,
  PlasticCardForVirtualRequest,
  PostGekV1ApplyCodeParams,
  PostGekV1BankAccountsDealsParams,
  PostGekV1CancelCodeParams,
  PostGekV1InvestCreateInvestmentParams,
  PostGekV1InvestReturnInvestmentParams,
  PostGekV1MarketCancelOrderParams,
  PostGekV1MarketCloseRoomParams,
  PostGekV1WalletCreateWithdrawParams,
  PostGekV1WalletInternalTransferParams,
  PostPubV1AuthParams,
  ReferralOutApiResponse,
  RoomInfoApiResponse,
  RoomInfoListApiResponse,
  SessionDataDTO,
  StringApiResponse,
  StringDecimalDictionaryApiResponse,
  SubmitNewDealApiResponse,
  TokensNetworkArrayApiResponse,
  TxCodesOutApiResponse,
  TxCodesOutListApiResponse,
  UpdateTxPartnerInfoIn,
  WalletAddressOutApiResponse,
  WalletAddressOutListApiResponse,
  WalletInfoListApiResponse
} from './model'
import getGekV1BankClientDetailsMutator from '../../lib/(orval)axios';
import getGekV1BankGetCardsMutator from '../../lib/(orval)axios';
import getGekV1BankGetProgramsMutator from '../../lib/(orval)axios';
import getGekV1BankCardsCardIdUnmaskMutator from '../../lib/(orval)axios';
import getGekV1BankDealsMutator from '../../lib/(orval)axios';
import postGekV1BankAccountsDealsMutator from '../../lib/(orval)axios';
import postGekV1BankCardsCardIdPinMutator from '../../lib/(orval)axios';
import postGekV1BankCardsCardIdMutator from '../../lib/(orval)axios';
import postGekV1BankCardsMutator from '../../lib/(orval)axios';
import postGekV1BankCardsCardIdOrderMutator from '../../lib/(orval)axios';
import postGekV1BankCardsCardIdActivateMutator from '../../lib/(orval)axios';
import postGekV1BankPaymentCommissionMutator from '../../lib/(orval)axios';
import getGekV1TokensNetworksMutator from '../../lib/(orval)axios';
import postGekV1ApplyCodeMutator from '../../lib/(orval)axios';
import postGekV1CancelCodeMutator from '../../lib/(orval)axios';
import postGekV1CreateTxCodeMutator from '../../lib/(orval)axios';
import getGekV1ListTxCodesMutator from '../../lib/(orval)axios';
import getGekV1CodeTxInfoMutator from '../../lib/(orval)axios';
import getGekV1AddressTxInfoMutator from '../../lib/(orval)axios';
import getGekV1AssetsMutator from '../../lib/(orval)axios';
import getGekV1InvestGetInvestmentsMutator from '../../lib/(orval)axios';
import postGekV1InvestCreateInvestmentMutator from '../../lib/(orval)axios';
import postGekV1InvestReturnInvestmentMutator from '../../lib/(orval)axios';
import getGekV1MarketGetRatesMutator from '../../lib/(orval)axios';
import getGekV1MarketGetTradeInfoMutator from '../../lib/(orval)axios';
import getGekV1MarketGetOrdersMutator from '../../lib/(orval)axios';
import postGekV1MarketCreateOrderMutator from '../../lib/(orval)axios';
import postGekV1MarketCancelOrderMutator from '../../lib/(orval)axios';
import getGekV1MarketListRoomsMutator from '../../lib/(orval)axios';
import postGekV1MarketCreateRoomMutator from '../../lib/(orval)axios';
import postGekV1MarketCloseRoomMutator from '../../lib/(orval)axios';
import postPubV1AuthMutator from '../../lib/(orval)axios';
import getGekV1ReferralGetReferralsMutator from '../../lib/(orval)axios';
import getGekV1ReferralGetAgentCodeMutator from '../../lib/(orval)axios';
import getGekV1ReferralGetReferralInvestmentsMutator from '../../lib/(orval)axios';
import getGekV1WalletGetInfoMutator from '../../lib/(orval)axios';
import getGekV1WalletGetBalanceMutator from '../../lib/(orval)axios';
import getGekV1WalletCreateAddressMutator from '../../lib/(orval)axios';
import getGekV1WalletListAddressesMutator from '../../lib/(orval)axios';
import postGekV1WalletInternalTransferMutator from '../../lib/(orval)axios';
import postGekV1WalletCreateWithdrawMutator from '../../lib/(orval)axios';
import postGekV1WalletUpdateTxPartnerInfoMutator from '../../lib/(orval)axios';
import getGekV1WalletGetHistoryTransactionsMutator from '../../lib/(orval)axios';



// eslint-disable-next-line
  type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;


  export const apiBankClientDetails = (
    
 options?: SecondParameter<typeof getGekV1BankClientDetailsMutator>,) => {
      return getGekV1BankClientDetailsMutator<ClientDetailsApiResponse>(
      {url: `/gek/v1/bank/client_details`, method: 'get'
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ IBAN —Å—á–µ—Ç—É –∫–æ—à–µ–ª—å–∫–∞
 */
export const apiBankGetCards = (
    params?: GetGekV1BankGetCardsParams,
 options?: SecondParameter<typeof getGekV1BankGetCardsMutator>,) => {
      return getGekV1BankGetCardsMutator<CardIListApiResponse>(
      {url: `/gek/v1/bank/get_cards`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –∫–ª–∏–µ–Ω—Ç–∞, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ IBAN —Å—á–µ—Ç—É
 */
export const apiBankGetPrograms = (
    
 options?: SecondParameter<typeof getGekV1BankGetProgramsMutator>,) => {
      return getGekV1BankGetProgramsMutator<ClientProgramIListApiResponse>(
      {url: `/gek/v1/bank/get_programs`, method: 'get'
    },
      options);
    }
  
export const apiBankCardsCardIdUnmask = (
    cardId: string,
 options?: SecondParameter<typeof getGekV1BankCardsCardIdUnmaskMutator>,) => {
      return getGekV1BankCardsCardIdUnmaskMutator<CardSecretDTOApiResponse>(
      {url: `/gek/v1/bank/cards/${cardId}/unmask`, method: 'get'
    },
      options);
    }
  
export const apiBankDeals = (
    
 options?: SecondParameter<typeof getGekV1BankDealsMutator>,) => {
      return getGekV1BankDealsMutator<AvailableDealArrayApiResponse>(
      {url: `/gek/v1/bank/deals`, method: 'get'
    },
      options);
    }
  
export const apiBankAccountsDeals = (
    dealModel: DealModel,
    params?: PostGekV1BankAccountsDealsParams,
 options?: SecondParameter<typeof postGekV1BankAccountsDealsMutator>,) => {
      return postGekV1BankAccountsDealsMutator<SubmitNewDealApiResponse>(
      {url: `/gek/v1/bank/accounts/deals`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: dealModel,
        params
    },
      options);
    }
  
export const apiBankCardsCardIdPin = (
    cardId: string,
    changePinModel: ChangePinModel,
 options?: SecondParameter<typeof postGekV1BankCardsCardIdPinMutator>,) => {
      return postGekV1BankCardsCardIdPinMutator<ApiResponse>(
      {url: `/gek/v1/bank/cards/${cardId}/pin`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: changePinModel
    },
      options);
    }
  
export const apiBankCardsCardId = (
    cardId: string,
    cardLimits: CardLimits,
 options?: SecondParameter<typeof postGekV1BankCardsCardIdMutator>,) => {
      return postGekV1BankCardsCardIdMutator<ApiResponse>(
      {url: `/gek/v1/bank/cards/${cardId}`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: cardLimits
    },
      options);
    }
  
export const apiBankCards = (
    cardRegistrationRequest: CardRegistrationRequest,
 options?: SecondParameter<typeof postGekV1BankCardsMutator>,) => {
      return postGekV1BankCardsMutator<ObjectApiResponse>(
      {url: `/gek/v1/bank/cards`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: cardRegistrationRequest
    },
      options);
    }
  
export const apiBankCardsCardIdOrder = (
    cardId: string,
    plasticCardForVirtualRequest: PlasticCardForVirtualRequest,
 options?: SecondParameter<typeof postGekV1BankCardsCardIdOrderMutator>,) => {
      return postGekV1BankCardsCardIdOrderMutator<CardCreationResultApiResponse>(
      {url: `/gek/v1/bank/cards/${cardId}/order`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: plasticCardForVirtualRequest
    },
      options);
    }
  
export const apiBankCardsCardIdActivate = (
    cardId: string,
 options?: SecondParameter<typeof postGekV1BankCardsCardIdActivateMutator>,) => {
      return postGekV1BankCardsCardIdActivateMutator<ApiResponse>(
      {url: `/gek/v1/bank/cards/${cardId}/activate`, method: 'post'
    },
      options);
    }
  
export const apiBankPaymentCommission = (
    paymentDetails: PaymentDetails,
 options?: SecondParameter<typeof postGekV1BankPaymentCommissionMutator>,) => {
      return postGekV1BankPaymentCommissionMutator<PaymentFeeApiResponse>(
      {url: `/gek/v1/bank/payment/commission`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: paymentDetails
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–º —Å–µ—Ç—è–º –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
 */
export const apiTokensNetworks = (
    params?: GetGekV1TokensNetworksParams,
 options?: SecondParameter<typeof getGekV1TokensNetworksMutator>,) => {
      return getGekV1TokensNetworksMutator<TokensNetworkArrayApiResponse>(
      {url: `/gek/v1/tokens_networks`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç/–ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–¥
 */
export const apiApplyCode = (
    params?: PostGekV1ApplyCodeParams,
 options?: SecondParameter<typeof postGekV1ApplyCodeMutator>,) => {
      return postGekV1ApplyCodeMutator<ApiResponse>(
      {url: `/gek/v1/apply_code`, method: 'post',
        params
    },
      options);
    }
  
/**
 * @summary –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç/–æ—Ç–º–µ–Ω—è–µ—Ç –∫–æ–¥
 */
export const apiCancelCode = (
    params?: PostGekV1CancelCodeParams,
 options?: SecondParameter<typeof postGekV1CancelCodeMutator>,) => {
      return postGekV1CancelCodeMutator<ApiResponse>(
      {url: `/gek/v1/cancel_code`, method: 'post',
        params
    },
      options);
    }
  
/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å—Ä–µ–¥—Å—Ç–≤
 */
export const apiCreateTxCode = (
    createTxCodeIn: CreateTxCodeIn,
 options?: SecondParameter<typeof postGekV1CreateTxCodeMutator>,) => {
      return postGekV1CreateTxCodeMutator<TxCodesOutApiResponse>(
      {url: `/gek/v1/create_tx_code`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: createTxCodeIn
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –∫–æ–¥–∞–º–∏
 */
export const apiListTxCodes = (
    params?: GetGekV1ListTxCodesParams,
 options?: SecondParameter<typeof getGekV1ListTxCodesMutator>,) => {
      return getGekV1ListTxCodesMutator<TxCodesOutListApiResponse>(
      {url: `/gek/v1/list_tx_codes`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–≥–æ –∫–æ–¥–∞
 */
export const apiCodeTxInfo = (
    params?: GetGekV1CodeTxInfoParams,
 options?: SecondParameter<typeof getGekV1CodeTxInfoMutator>,) => {
      return getGekV1CodeTxInfoMutator<TxCodesOutApiResponse>(
      {url: `/gek/v1/code_tx_info`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥—Ä–µ—Å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export const apiAddressTxInfo = (
    params?: GetGekV1AddressTxInfoParams,
 options?: SecondParameter<typeof getGekV1AddressTxInfoMutator>,) => {
      return getGekV1AddressTxInfoMutator<AddressTxOutApiResponse>(
      {url: `/gek/v1/address_tx_info`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞–∫—Ç–∏–≤–∞–º
 */
export const apiAssets = (
    params?: GetGekV1AssetsParams,
 options?: SecondParameter<typeof getGekV1AssetsMutator>,) => {
      return getGekV1AssetsMutator<CurrencysOutListApiResponse>(
      {url: `/gek/v1/assets`, method: 'get',
        params
    },
      options);
    }
  
/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –¥–∞—Ç—ã.
–ï—Å–ª–∏ —Ö–æ—Ç—è–±—ã –æ–¥–Ω–∞ –¥–∞—Ç–∞ –∑–∞–¥–∞–Ω–∞ - —Ç–æ –≤—ã–±–æ—Ä–∫–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –∏–Ω–≤–µ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –¥–∞—Ç–µ –æ—Ç–∫—Ä—ã—Ç–∏—è.
 * @summary –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞ (–¥–µ–ø–æ–∑–∏—Ç—ã)
 */
export const apiGetInvestments = (
    params?: GetGekV1InvestGetInvestmentsParams,
 options?: SecondParameter<typeof getGekV1InvestGetInvestmentsMutator>,) => {
      return getGekV1InvestGetInvestmentsMutator<GetDepositOutListApiResponse>(
      {url: `/gek/v1/invest/get_investments`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞
 */
export const apiCreateInvestment = (
    params?: PostGekV1InvestCreateInvestmentParams,
 options?: SecondParameter<typeof postGekV1InvestCreateInvestmentMutator>,) => {
      return postGekV1InvestCreateInvestmentMutator<GetDepositOutApiResponse>(
      {url: `/gek/v1/invest/create_investment`, method: 'post',
        params
    },
      options);
    }
  
/**
 * @summary –î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞
 */
export const apiReturnInvestment = (
    params?: PostGekV1InvestReturnInvestmentParams,
 options?: SecondParameter<typeof postGekV1InvestReturnInvestmentMutator>,) => {
      return postGekV1InvestReturnInvestmentMutator<FastCloseDepositOutApiResponse>(
      {url: `/gek/v1/invest/return_investment`, method: 'post',
        params
    },
      options);
    }
  
/**
 * –ö—É—Ä—Å—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å –≤–Ω–µ—à–Ω–∏—Ö –±–∏—Ä–∂ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π —Å—Ä–µ–¥–Ω–µ–µ –º–µ–∂–¥—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏ —Å–ø—Ä–æ—Å–æ–º.
–ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –æ–±–º–µ–Ω–∞, —Ç–æ –≤—ã—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –∫—Ä–æ—Å—Å –∫—É—Ä—Å—ã —á–µ—Ä–µ–∑ USDT –∏–ª–∏ BTC.
 * @summary –ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ —Å—Ç—É–∫—Ç—É—Ä–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
 */
export const apiGetRates = (
    params: GetGekV1MarketGetRatesParams,
 options?: SecondParameter<typeof getGekV1MarketGetRatesMutator>,) => {
      return getGekV1MarketGetRatesMutator<StringDecimalDictionaryApiResponse>(
      {url: `/gek/v1/market/get_rates`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
 */
export const apiGetTradeInfo = (
    params?: GetGekV1MarketGetTradeInfoParams,
 options?: SecondParameter<typeof getGekV1MarketGetTradeInfoMutator>,) => {
      return getGekV1MarketGetTradeInfoMutator<GetTradeInfoOutApiResponse>(
      {url: `/gek/v1/market/get_trade_info`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –°–ø–∏—Å–æ–∫ –æ—Ä–¥–µ—Ä–æ–≤ –∫–æ—à–µ–ª—å–∫–∞. –ù–µ –±–æ–ª–µ–µ 100 –∑–∞ –∑–∞–ø—Ä–æ—Å
 */
export const apiGetOrders = (
    params?: GetGekV1MarketGetOrdersParams,
 options?: SecondParameter<typeof getGekV1MarketGetOrdersMutator>,) => {
      return getGekV1MarketGetOrdersMutator<GetOrderListOutListApiResponse>(
      {url: `/gek/v1/market/get_orders`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ä–¥–µ—Ä–∞
 */
export const apiCreateOrder = (
    newOrderInfo: NewOrderInfo,
 options?: SecondParameter<typeof postGekV1MarketCreateOrderMutator>,) => {
      return postGekV1MarketCreateOrderMutator<GetOrderListOutApiResponse>(
      {url: `/gek/v1/market/create_order`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: newOrderInfo
    },
      options);
    }
  
/**
 * @summary –û—Ç–º–µ–Ω–∞ –æ—Ä–¥–µ—Ä–∞
 */
export const apiCancelOrder = (
    params?: PostGekV1MarketCancelOrderParams,
 options?: SecondParameter<typeof postGekV1MarketCancelOrderMutator>,) => {
      return postGekV1MarketCancelOrderMutator<ApiResponse>(
      {url: `/gek/v1/market/cancel_order`, method: 'post',
        params
    },
      options);
    }
  
/**
 * @summary –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –æ–±–º–µ–Ω–∞, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç—É
 */
export const apiListRooms = (
    
 options?: SecondParameter<typeof getGekV1MarketListRoomsMutator>,) => {
      return getGekV1MarketListRoomsMutator<RoomInfoListApiResponse>(
      {url: `/gek/v1/market/list_rooms`, method: 'get'
    },
      options);
    }
  
/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã –æ–±–º–µ–Ω–∞. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ —á–µ—Ä–µ–∑ –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ apply_code.
 */
export const apiCreateRoom = (
    newRoomInfo: NewRoomInfo,
 options?: SecondParameter<typeof postGekV1MarketCreateRoomMutator>,) => {
      return postGekV1MarketCreateRoomMutator<RoomInfoApiResponse>(
      {url: `/gek/v1/market/create_room`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: newRoomInfo
    },
      options);
    }
  
/**
 * @summary –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –∫–æ–º–Ω–∞—Ç—É –æ–±–º–µ–Ω–∞. 
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫ - –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∫–æ–º–Ω–∞—Ç—ã, 
–µ—Å–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü - —É–¥–∞–ª—è–µ—Ç –∫–æ–º–Ω–∞—Ç—É –∏ –æ—Ç–º–µ–Ω—è–µ—Ç –≤—Å–µ –æ—Ä–¥–µ—Ä—ã –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤ –¥–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ
 */
export const apiCloseRoom = (
    params?: PostGekV1MarketCloseRoomParams,
 options?: SecondParameter<typeof postGekV1MarketCloseRoomMutator>,) => {
      return postGekV1MarketCloseRoomMutator<ApiResponse>(
      {url: `/gek/v1/market/close_room`, method: 'post',
        params
    },
      options);
    }
  
/**
 * –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ –∑–∞–¥–∞–Ω, –æ–Ω –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è.
–ï—Å–ª–∏ –∫–ª—é—á –∑–∞–¥–∞–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏ —É–¥–∞–ª—è—é—Ç—Å—è –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.
–ï—Å–ª–∏ –∑–∞–¥–∞–Ω –∫–ª—é—á –∏ –¥–∞–Ω–Ω—ã–µ, —Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è.
 * @summary –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏ –º–µ–∂–¥—É —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
 */
export const apiPubV1Auth = (
    sessionDataDTO: SessionDataDTO,
    params?: PostPubV1AuthParams,
 options?: SecondParameter<typeof postPubV1AuthMutator>,) => {
      return postPubV1AuthMutator<ObjectApiResponse | void>(
      {url: `/pub/v1/auth`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: sessionDataDTO,
        params
    },
      options);
    }
  
/**
 * Error codes:
(1) - Client not found - The client_id in the header is not found in the database.
 * @summary –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ / —Ä–µ—Ñ–µ—Ä–∞–ª—ã
 */
export const apiGetReferrals = (
    
 options?: SecondParameter<typeof getGekV1ReferralGetReferralsMutator>,) => {
      return getGekV1ReferralGetReferralsMutator<ReferralOutApiResponse>(
      {url: `/gek/v1/referral/get_referrals`, method: 'get'
    },
      options);
    }
  
/**
 * @summary –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ / –∞–≥–µ–Ω—Ç—Å–∫–∏–π –∫–æ–¥
 */
export const apiGetAgentCode = (
    
 options?: SecondParameter<typeof getGekV1ReferralGetAgentCodeMutator>,) => {
      return getGekV1ReferralGetAgentCodeMutator<StringApiResponse>(
      {url: `/gek/v1/referral/get_agent_code`, method: 'get'
    },
      options);
    }
  
/**
 * @summary –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ / –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è(–≤—ã–ø–ª–∞—Ç—ã) –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º
 */
export const apiGetReferralInvestments = (
    
 options?: SecondParameter<typeof getGekV1ReferralGetReferralInvestmentsMutator>,) => {
      return getGekV1ReferralGetReferralInvestmentsMutator<ReferralOutApiResponse>(
      {url: `/gek/v1/referral/get_referral_investments`, method: 'get'
    },
      options);
    }
  
/**
 * @summary –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ –∫–ª–∏–µ–Ω—Ç–∞.
 */
export const apiGetInfo = (
    params?: GetGekV1WalletGetInfoParams,
 options?: SecondParameter<typeof getGekV1WalletGetInfoMutator>,) => {
      return getGekV1WalletGetInfoMutator<WalletInfoListApiResponse>(
      {url: `/gek/v1/wallet/get_info`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –ë–∞–ª–∞–Ω—Å—ã –∫–æ—à–µ–ª—å–∫–∞
 */
export const apiGetBalance = (
    params?: GetGekV1WalletGetBalanceParams,
 options?: SecondParameter<typeof getGekV1WalletGetBalanceMutator>,) => {
      return getGekV1WalletGetBalanceMutator<GetBalanceOutListApiResponse>(
      {url: `/gek/v1/wallet/get_balance`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
 */
export const apiCreateAddress = (
    params?: GetGekV1WalletCreateAddressParams,
 options?: SecondParameter<typeof getGekV1WalletCreateAddressMutator>,) => {
      return getGekV1WalletCreateAddressMutator<WalletAddressOutApiResponse>(
      {url: `/gek/v1/wallet/create_address`, method: 'get',
        params
    },
      options);
    }
  
/**
 * @summary –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è —Å–µ—Ç–∏ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞
 */
export const apiListAddresses = (
    params?: GetGekV1WalletListAddressesParams,
 options?: SecondParameter<typeof getGekV1WalletListAddressesMutator>,) => {
      return getGekV1WalletListAddressesMutator<WalletAddressOutListApiResponse>(
      {url: `/gek/v1/wallet/list_addresses`, method: 'get',
        params
    },
      options);
    }
  
export const apiInternalTransfer = (
    createTransferIn: CreateTransferIn,
    params?: PostGekV1WalletInternalTransferParams,
 options?: SecondParameter<typeof postGekV1WalletInternalTransferMutator>,) => {
      return postGekV1WalletInternalTransferMutator<CreateWithdrawOutApiResponse>(
      {url: `/gek/v1/wallet/internal_transfer`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: createTransferIn,
        params
    },
      options);
    }
  
/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –∫–æ—à–µ–ª—å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞.
–ï—Å–ª–∏ —Ü–µ–ª–µ–≤–æ–π –∞–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∞–¥—Ä–µ—Å–æ–≤ –∏ –∑–∞–¥–∞–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, —Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–µ—Ä–µ–≤–æ–¥ (–∫–æ–º–∏—Å—Å–∏–∏ –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è).
–ü—Ä–∏ –≤—ã–≤–æ–¥–µ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –≤—ã—Å—ã–ª–∞–µ—Ç—Å—è –∫–æ–¥ –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –≤ —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã. 
–í –≤–æ–∑–≤—Ä–∞—Ç–µ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω—ã txId, confirmationStatusCode –∏ –µ–≥–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ confirmationStatusText.
confirmationCode —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–º—Å –∫–æ–¥–æ–º, –ø–∏–Ω–æ–º –∏–ª–∏ —Å—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω)
txId - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—ã—Å–ª–∞—Ç—å –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ confirmationTimetick.
confirmationCode - –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
export const apiCreateWithdraw = (
    createWithdrawIn: CreateWithdrawIn,
    params?: PostGekV1WalletCreateWithdrawParams,
 options?: SecondParameter<typeof postGekV1WalletCreateWithdrawMutator>,) => {
      return postGekV1WalletCreateWithdrawMutator<CreateWithdrawOutApiResponse>(
      {url: `/gek/v1/wallet/create_withdraw`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: createWithdrawIn,
        params
    },
      options);
    }
  
/**
 * @summary –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export const apiUpdateTxPartnerInfo = (
    updateTxPartnerInfoIn: UpdateTxPartnerInfoIn,
 options?: SecondParameter<typeof postGekV1WalletUpdateTxPartnerInfoMutator>,) => {
      return postGekV1WalletUpdateTxPartnerInfoMutator<StringApiResponse>(
      {url: `/gek/v1/wallet/update_tx_partner_info`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: updateTxPartnerInfoIn
    },
      options);
    }
  
/**
 * @summary –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∫–æ—à–µ–ª—å–∫–∞ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–º –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –∏–ª–∏ —É—Å–ª–æ–≤–∏—è—Ö —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏. –ù–µ –±–æ–ª–µ–µ 100 –∑–∞ –∑–∞–ø—Ä–æ—Å.
–î–ª—è —Å—Ö–µ–º—ã —Å –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å from_tx_id –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–∞—Ä—Ç–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 */
export const apiGetHistoryTransactions = (
    params?: GetGekV1WalletGetHistoryTransactionsParams,
 options?: SecondParameter<typeof getGekV1WalletGetHistoryTransactionsMutator>,) => {
      return getGekV1WalletGetHistoryTransactionsMutator<GetHistoryTrasactionOutListApiResponse>(
      {url: `/gek/v1/wallet/get_history_transactions`, method: 'get',
        params
    },
      options);
    }
  
export type ApiBankClientDetailsResult = NonNullable<Awaited<ReturnType<typeof apiBankClientDetails>>>
export type ApiBankGetCardsResult = NonNullable<Awaited<ReturnType<typeof apiBankGetCards>>>
export type ApiBankGetProgramsResult = NonNullable<Awaited<ReturnType<typeof apiBankGetPrograms>>>
export type ApiBankCardsCardIdUnmaskResult = NonNullable<Awaited<ReturnType<typeof apiBankCardsCardIdUnmask>>>
export type ApiBankDealsResult = NonNullable<Awaited<ReturnType<typeof apiBankDeals>>>
export type ApiBankAccountsDealsResult = NonNullable<Awaited<ReturnType<typeof apiBankAccountsDeals>>>
export type ApiBankCardsCardIdPinResult = NonNullable<Awaited<ReturnType<typeof apiBankCardsCardIdPin>>>
export type ApiBankCardsCardIdResult = NonNullable<Awaited<ReturnType<typeof apiBankCardsCardId>>>
export type ApiBankCardsResult = NonNullable<Awaited<ReturnType<typeof apiBankCards>>>
export type ApiBankCardsCardIdOrderResult = NonNullable<Awaited<ReturnType<typeof apiBankCardsCardIdOrder>>>
export type ApiBankCardsCardIdActivateResult = NonNullable<Awaited<ReturnType<typeof apiBankCardsCardIdActivate>>>
export type ApiBankPaymentCommissionResult = NonNullable<Awaited<ReturnType<typeof apiBankPaymentCommission>>>
export type ApiTokensNetworksResult = NonNullable<Awaited<ReturnType<typeof apiTokensNetworks>>>
export type ApiApplyCodeResult = NonNullable<Awaited<ReturnType<typeof apiApplyCode>>>
export type ApiCancelCodeResult = NonNullable<Awaited<ReturnType<typeof apiCancelCode>>>
export type ApiCreateTxCodeResult = NonNullable<Awaited<ReturnType<typeof apiCreateTxCode>>>
export type ApiListTxCodesResult = NonNullable<Awaited<ReturnType<typeof apiListTxCodes>>>
export type ApiCodeTxInfoResult = NonNullable<Awaited<ReturnType<typeof apiCodeTxInfo>>>
export type ApiAddressTxInfoResult = NonNullable<Awaited<ReturnType<typeof apiAddressTxInfo>>>
export type ApiAssetsResult = NonNullable<Awaited<ReturnType<typeof apiAssets>>>
export type ApiGetInvestmentsResult = NonNullable<Awaited<ReturnType<typeof apiGetInvestments>>>
export type ApiCreateInvestmentResult = NonNullable<Awaited<ReturnType<typeof apiCreateInvestment>>>
export type ApiReturnInvestmentResult = NonNullable<Awaited<ReturnType<typeof apiReturnInvestment>>>
export type ApiGetRatesResult = NonNullable<Awaited<ReturnType<typeof apiGetRates>>>
export type ApiGetTradeInfoResult = NonNullable<Awaited<ReturnType<typeof apiGetTradeInfo>>>
export type ApiGetOrdersResult = NonNullable<Awaited<ReturnType<typeof apiGetOrders>>>
export type ApiCreateOrderResult = NonNullable<Awaited<ReturnType<typeof apiCreateOrder>>>
export type ApiCancelOrderResult = NonNullable<Awaited<ReturnType<typeof apiCancelOrder>>>
export type ApiListRoomsResult = NonNullable<Awaited<ReturnType<typeof apiListRooms>>>
export type ApiCreateRoomResult = NonNullable<Awaited<ReturnType<typeof apiCreateRoom>>>
export type ApiCloseRoomResult = NonNullable<Awaited<ReturnType<typeof apiCloseRoom>>>
export type ApiPubV1AuthResult = NonNullable<Awaited<ReturnType<typeof apiPubV1Auth>>>
export type ApiGetReferralsResult = NonNullable<Awaited<ReturnType<typeof apiGetReferrals>>>
export type ApiGetAgentCodeResult = NonNullable<Awaited<ReturnType<typeof apiGetAgentCode>>>
export type ApiGetReferralInvestmentsResult = NonNullable<Awaited<ReturnType<typeof apiGetReferralInvestments>>>
export type ApiGetInfoResult = NonNullable<Awaited<ReturnType<typeof apiGetInfo>>>
export type ApiGetBalanceResult = NonNullable<Awaited<ReturnType<typeof apiGetBalance>>>
export type ApiCreateAddressResult = NonNullable<Awaited<ReturnType<typeof apiCreateAddress>>>
export type ApiListAddressesResult = NonNullable<Awaited<ReturnType<typeof apiListAddresses>>>
export type ApiInternalTransferResult = NonNullable<Awaited<ReturnType<typeof apiInternalTransfer>>>
export type ApiCreateWithdrawResult = NonNullable<Awaited<ReturnType<typeof apiCreateWithdraw>>>
export type ApiUpdateTxPartnerInfoResult = NonNullable<Awaited<ReturnType<typeof apiUpdateTxPartnerInfo>>>
export type ApiGetHistoryTransactionsResult = NonNullable<Awaited<ReturnType<typeof apiGetHistoryTransactions>>>
