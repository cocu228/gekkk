/**
 * Generated by orval v6.19.1 üç∫
 * Do not edit manually.
 * Gekcore broker gate API
 * Generic electronic key multi-cryptocurrency broker wallet platform with a built-in exchange. Gate.<br/>
                    Build version 1.0.2-20240202-0902.6046+448a20a6398e9e01512eae689a544e39eaf22356<br/><br/>
                    –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–æ–≤ –≤—Å–µ—Ö API —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –≤ –ø–æ–ª–µ <b>result</b> JSON-RPC —Ñ–æ—Ä–º–∞—Ç–∞.<br/>
                    http –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç –∫–æ–¥ <b>200(OK)</b>, –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–ª–∞ –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.<br/>
                    –í —Å–ª—É—á–∞–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã—Ö/–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫, –ø–æ–ª–µ <b>error</b> —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥(<b>code</b>) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ(<b>message</b>) –æ—à–∏–±–∫–∏.<br/>
                    –ü–æ–ª–µ <b>id</b> - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–±—Ä–æ—Å–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞(<b>nonce</b>) –∑–∞–ø—Ä–æ—Å–∞ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤.<br/><br/>
                    
 * OpenAPI spec version: v1
 */
import type { AttestationConveyancePreference } from './attestationConveyancePreference';
import type { AuthenticatorSelection } from './authenticatorSelection';
import type { PublicKeyCredentialDescriptor } from './publicKeyCredentialDescriptor';
import type { AuthenticationExtensionsClientInputs } from './authenticationExtensionsClientInputs';
import type { PubKeyCredParam } from './pubKeyCredParam';
import type { PublicKeyCredentialRpEntity } from './publicKeyCredentialRpEntity';
import type { Fido2User } from './fido2User';

export interface CredentialCreateOptions {
  attestation?: AttestationConveyancePreference;
  authenticatorSelection?: AuthenticatorSelection;
  challenge?: string | null;
  errorMessage?: string | null;
  excludeCredentials?: PublicKeyCredentialDescriptor[] | null;
  extensions?: AuthenticationExtensionsClientInputs;
  pubKeyCredParams?: PubKeyCredParam[] | null;
  rp?: PublicKeyCredentialRpEntity;
  status?: string | null;
  timeout?: number;
  user?: Fido2User;
}
